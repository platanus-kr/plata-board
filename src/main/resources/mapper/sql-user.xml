<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.platanus.webboard.domain.MyBatis.MyBatisUserMapper">

    <resultMap id="userMap" type="userAlias">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="nickname" property="nickname"/>
        <result column="email" property="email"/>
        <result column="deleted" property="deleted"/>
        <!--        <result column="role" property="role" typeHandler="~~~"/>-->
        <result column="role" property="role"/>
    </resultMap>

    <insert id="save" parameterType="userAlias" useGeneratedKeys="true" keyProperty="id">
        insert into USERS(USERNAME,
                          PASSWORD,
                          NICKNAME,
                          EMAIL,
                          DELETED,
                          ROLE)
        values (#{username},
                #{password},
                #{nickname},
                #{email},
                #{deleted},
                #{role})
    </insert>
    <delete id="delete" parameterType="userAlias">
        delete
        from USERS
        where ID = #{id}
    </delete>

    <update id="update" parameterType="userAlias">
        update USERS
        set USERNAME = #{username},
            PASSWORS = #{password},
            NICKNAME = #{nickname},
            EMAIL    = #{email},
            ROLE     = #{role}
        where ID = #{id}
    </update>

    <update id="updateDeleteFlag" parameterType="userAlias">
        update USERS
        set DELETED = #{deleted}
        where ID = #{id}
    </update>

    <select id="findById" parameterType="long" resultMap="userMap">
        select *
        from USERS
        where ID = #{id}
    </select>

    <select id="findByUsername" parameterType="string" resultMap="userMap">
        select *
        from USERS
        where USERNAME = #{username}
    </select>

    <select id="findByEmail" parameterType="string" resultMap="userMap">
        select *
        from USERS
        where EMAIL = #{email}
    </select>

    <select id="findByNickname" parameterType="string" resultMap="userMap">
        select *
        from USERS
        where NICKNAME = #{nickname}
    </select>

    <select id="findByRole" parameterType="userRoleAlias" resultMap="userMap">
        select *
        from USERS
        where ROLE = #{role}
    </select>

    <select id="findAll" resultMap="userMap">
        select *
        from USERS
        where DELETED = 0
    </select>

    <delete id="allDelete">
        delete
        from USERS
    </delete>


</mapper>
